<?php

/**
 * @file
 * Module to expose non-clickable versions of menu items the user can't visit
 */

/**
 * Define constants.
 */
define('FORESHADOW_MENU_MENUS', 0);

/**
 * Implements hook_help().
 * Displays help and module information.
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function foreshadow_menu_help($path, $arg) {
  switch ($path) {
    case "admin/help#foreshadow_menu";
      return '<p>' . t('For the specified menu, displays ALL menu child titles, regardless of user permissions. Only displays links for content for which the user has permissions, otherwise displays title in plain text.') . '</p>';
      break;
    }
  }

/**
 * Implements hook_block_info().
 */
function foreshadow_menu_block_info() {
  $blocks['foreshadow_menu'] = array(
    'info' => t('Foreshadow Menu'), //The name that will appear in the block list.
    'cache' => DRUPAL_CACHE_PER_ROLE, //Default
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 * Gets the list of links in menu and creates a new array of links, including
 * non-clickable link titles for links where permissions aren't granted.
 * The content of the block is an array of the values returned by $items
 */
function foreshadow_menu_block_view($delta = '') {
  function foreshadow_menu_contents() {
    module_load_include('module', 'menu');
    //get the list of links in the menu
    /*
     * @todo: make this support more than one menu. Multiple blocks, one per menu.
     * See branch "add-multimenu-support".
     */
 //   $menu_list = variable_get('foreshadow_menu_menus', FORESHADOW_MENU_MENUS);
    $menu = variable_get('foreshadow_menu_menus', FORESHADOW_MENU_MENUS);
//    foreach ($menu_list as $menu) {
      if (!empty($menu)) {
        $foreshadow_menu_items = menu_load_links($menu);
        //create an array for links
        $items = array();
        foreach ($foreshadow_menu_items as $foreshadow_menu_item) {
          $foreshadow_menu_item_info = menu_link_load($foreshadow_menu_item['mlid']);
          //pull out the info about the current user's node access permissions
          $foreshadow_menu_item_access = $foreshadow_menu_item_info['access'];
          $foreshadow_menu_path = $foreshadow_menu_item['link_path'];
          if ($foreshadow_menu_item_access == 1) {
          // if the current user has access to the linked node, create a link array.
            $items[] = array(
              'data' => l($foreshadow_menu_item['link_title'], $foreshadow_menu_path, array('attributes' => array('class' => array('mlid-' . $foreshadow_menu_item['mlid'], 'access-' . $foreshadow_menu_item_access)))) // then add a themed link with custom classes to the array of links
            );
          }
          else {
            $items[] = array(
              'data' => $foreshadow_menu_item['link_title'] //otherwise just add a title with no linkage.
            );
          }
        }
      }
//    }
    return $items;
  }
  switch ($delta) {
    case 'foreshadow_menu':
    $block['subject'] = t('Foreshadow Menu');
    $block['content'] = '<ul class="menu foreshadow-menu">';
    $items = foreshadow_menu_contents();
    foreach ($items as $item) {
      /*
       * @todo: Give menu list an ID from menu name.
       * @todo: Make markup match native menu rendering.
       * @todo: Support hierarchical menus: see branch 'add-hierarchy-support'
       */
      $block['content'] .= '<li class="leaf">';
      $block['content'] .= $item['data'];
      $block['content'] .= '</li>';
    }
    $block['content'] .= '</ul>';
    return $block;
  }
}


/**
 * Page callback: foreshadow menu settings
 * @see foreshadow_menu_menu()
 */
function foreshadow_menu_admin() {
  // List all the menu titles.
  $menus = menu_load_all();
  $menu_titles = array();
  foreach ($menus as $menu) {
    $menu_title = $menu['title'];
    $key = $menu['menu_name'];
    $menu_titles[$key] = $menu_title;
  }
  // Supply checkboxes for choosing which menus to apply this to.
  $form['foreshadow_menu_menus'] = array(
    '#type' => 'radios',
    '#options' => $menu_titles,
    '#title' => t('Which menu to foreshadow?'),
    '#default_value' => variable_get('foreshadow_menu_menus', FORESHADOW_MENU_MENUS),
    '#description' => t('Which form to display in the block.'),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}
/**
 *
 * Implements hook_menu().
 *
 */
function foreshadow_menu_menu() {
    $items = array();

    $items['admin/structure/menu/foreshadow_menu'] = array(
        'title' => 'Foreshadow Menu',
        'description' => 'In menus, shows unlinked "shadows" of links to which the user does not have access.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('foreshadow_menu_admin'),
        'access arguments' => array('access administration pages'),
        'type' => MENU_NORMAL_ITEM,
    );
    return $items;
}